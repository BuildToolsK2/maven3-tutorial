# -*- mode: org; coding: utf-8-unix -*-

#+SETUPFILE: ./conf.org

** この章のねらい
- pom.xmlとIDEがどう関連するかを学ぼう！

** TODO MavenプロジェクトをEclipseに取り込んでみよう

#+BEGIN_EXAMPLE
File -> Import -> Existing Maven Project
#+END_EXAMPLE


[[file:resources/eclipse-import.png]]

** Mavenの設定がどうEclipseに取り込まれているか

Eclipseの設定を確認してみよう。

*** TODO Package Exploere

- src/main/javaがソースフォルダとして認識されている
- src/test/javaがソースフォルダとして認識されている
- 依存ライブラリが追加されている(junit, hamcrest)


[[file:resources/eclipse-explorer.png]]



*** TODO Project Properties (Source)

| ソースフォルダ | 出力先              |
|----------------+---------------------|
| src/main/java  | target/classes      |
| src/test/java  | target/test-classes |


[[file:resources/eclipse-build-path-source.png]]


*** TODO Project Properties (Libraries)

- 依存ライブラリJunitが、Mavenローカルリポジトリのjarを参照している

[[file:resources/eclipse-build-path-libraries.png]]



*** TODO Project Properties (Resource)

- Text file encoding が UTF-8 に設定されている

[[file:resources/eclipse-resource.png]]

** pom.xmlが変更された場合

pom.xmlが変更された場合、設定変更をEclipseに教えてあげる必要があります。

#+BEGIN_EXAMPLE
Maven -> Update Project...
#+END_EXAMPLE

*** TODO pom.xmlの変更を取り込んでみよう

pom.xmlを編集して、Eclipse上でUpdate Projectを実行してみましょう。

依存ライブラリを追加します。

#+BEGIN_SRC xml
<dependency>
    <groupId>commons-beanutils</groupId>
    <artifactId>commons-beanutils</artifactId>
    <version>1.9.2</version>
</dependency>
#+END_SRC

Update Projectを実行し、設定がどう変更したか確認します。


